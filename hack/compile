#!/usr/bin/env python3
from pathlib import Path

import yaml


def load_rules(path: Path) -> list[dict]:
    with path.open(encoding="UTF-8") as rules_file:
        return yaml.safe_load(rules_file.read())["rules"]


class _YamlDumper(yaml.Dumper):
    def ignore_aliases(self, *_):
        return True

    def increase_indent(self, flow=False, indentless=False):
        return super(_YamlDumper, self).increase_indent(flow, False)


def _dump_yaml(rules: list[dict]) -> str:
    return yaml.dump(
        {"rules": rules},
        Dumper=_YamlDumper,
        sort_keys=False,
        default_flow_style=False,
        width=float("inf"),
    )


if __name__ == "__main__":
    rules_dir = Path(__file__).resolve().parent.parent / "rules"
    rules = [
        rule
        for rules_file in rules_dir.glob("**/*.yaml")
        for rule in load_rules(rules_file)
    ]
    print(_dump_yaml(rules))
